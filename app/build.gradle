apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
  compileSdkVersion 30
  defaultConfig {
    applicationId "com.michaldrabik.muzeipixelartextension"
    minSdkVersion 19
    targetSdkVersion 29
    versionCode 6
    versionName "1.1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    def authorityValue = "com.michaldrabik.muzeipixelartextensionauthority"
    manifestPlaceholders = [
        pixelArtAuthority: authorityValue,
        fabricApiKey     : getLocalProperty("local.properties", "fabricApiKey")
    ]
    buildConfigField "String", "PIXELART_AUTHORITY", "\"${authorityValue}\""
  }

  signingConfigs {
    config {
      keyAlias getLocalProperty("keystore.properties", "keyAlias")
      keyPassword getLocalProperty("keystore.properties", "keyPassword")
      storeFile file(getLocalProperty("keystore.properties", "storeFile"))
      storePassword getLocalProperty("keystore.properties", "storePassword")
    }
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.config
    }
  }

  flavorDimensions "stage"
  productFlavors {
    development {
      dimension "stage"
      applicationIdSuffix ".dev"
      versionNameSuffix "-dev"
    }
    production {
      dimension "stage"
    }
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'android.arch.work:work-runtime:1.0.1'

  implementation 'com.squareup.retrofit2:retrofit:2.6.2'
  implementation 'com.squareup.retrofit2:converter-moshi:2.6.2'
  implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

  implementation 'com.google.android.apps.muzei:muzei-api:3.4.0'
  implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
    transitive = true
  }

  testImplementation 'junit:junit:4.12'
}

def getLocalProperty(String fileName, String propertyName) {
  def propsFile = rootProject.file(fileName)
  if (propsFile.exists()) {
    def props = new Properties()
    props.load(new FileInputStream(propsFile))
    return props[propertyName]
  } else {
    return ""
  }
}